{"version":3,"file":"static/js/884.45b81d9a.chunk.js","mappings":"4MACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaC,SAAEJ,EAAMI,UAC9C,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BC2DnI,EArDkB,SAACJ,GAEjB,IAAAK,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GACxBI,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAqBrB,OACEE,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAX,SAAA,EACPH,EAAAA,EAAAA,KAACe,EAAAA,GAAM,CAACC,KAAMR,EAAWS,QAAS,iBAAM,qCAAqC,KAC7EjB,EAAAA,EAAAA,KAACkB,EAAI,CAAAf,UACHU,EAAAA,EAAAA,MAAA,QAAMM,QARa,WACvBV,GAAa,EACf,EAMuCR,UAAWC,EAAckB,SAvBhE,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBb,EAAec,QAAQC,MACvCC,EAAcd,EAAaY,QAAQC,MAIzC1B,EAAM4B,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAc4FvB,SAAA,CACnFJ,EAAM+B,YACL9B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC9BH,EAAAA,EAAAA,KAAC+B,EAAAA,EAAc,OAInBlB,EAAAA,EAAAA,MAAA,OAAKZ,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAOgC,QAAQ,SAAQ7B,SAAC,YACxBH,EAAAA,EAAAA,KAAA,SAAOiC,KAAK,OAAOC,GAAG,SAASC,IAAKzB,QAEtCG,EAAAA,EAAAA,MAAA,OAAKZ,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAOgC,QAAQ,OAAM7B,SAAC,UACtBH,EAAAA,EAAAA,KAAA,YAAUkC,GAAG,OAAOE,KAAK,IAAID,IAAKvB,QAEpCZ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC9BH,EAAAA,EAAAA,KAAA,UAAQqC,QA5BM,WACtB5B,GAAa,EACf,EA0B4CR,UAAU,MAAKE,SAAC,uBAM9D,E,kBCjCA,EAlBiB,WAEd,IAAAmC,GAAgCC,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAWH,EAAXG,YAAcC,EAAMJ,EAANI,OACfC,GAAUC,EAAAA,EAAAA,OAElBC,EAAAA,EAAAA,YAAU,WACM,cAAXH,GACDC,EAAQG,KAAK,UAEhB,GAAI,CAACJ,EAAOC,IAMb,OAAO3C,EAAAA,EAAAA,KAAC+C,EAAS,CAAEjB,UAAwB,YAAXY,EAAuBf,WAJ/B,SAACqB,GACvBP,EAAYO,EACd,GAGF,C","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__9h8Dh\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__ogBoi\",\"loading\":\"QuoteForm_loading__gyIuQ\",\"control\":\"QuoteForm_control__8SqBM\",\"actions\":\"QuoteForm_actions__I8AC6\"};","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n\n  const [isentered, setisentered] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishedEntered = () => {\n    setisentered(false);\n  }\n\n  const formFocusHandler = () => {\n    setisentered(true)\n  }\n\n  return (\n    <Fragment>\n      <Prompt when={isentered} message={() => 'are you sure you want to leave ????'} />\n      <Card>\n        <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishedEntered} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;","import QuoteForm from '../components/quotes/QuoteForm';\n\nimport { useEffect } from 'react';\nimport useHttp from '../hooks/use-http';\nimport { addQuote } from '../lib/api';\n\nimport { useHistory } from 'react-router-dom';\nconst NewQuote = () => {\n\n   const { sendRequest , status }= useHttp(addQuote);\n    const history = useHistory();\n\n  useEffect(()=> {\n    if(status === 'completed'){\n      history.push('/quotes');\n    }\n   } , [status,history]);\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData)\n  };\n\n  return <QuoteForm  isLoading = {status === 'pending'}  onAddQuote={addQuoteHandler} />;\n};\n\nexport default NewQuote;"],"names":["props","_jsx","className","classes","children","_useState","useState","_useState2","_slicedToArray","isentered","setisentered","authorInputRef","useRef","textInputRef","_jsxs","Fragment","Prompt","when","message","Card","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","_useHttp","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","QuoteForm","quoteData"],"sourceRoot":""}